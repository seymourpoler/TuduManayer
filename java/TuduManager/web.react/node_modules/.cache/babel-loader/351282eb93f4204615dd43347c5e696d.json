{"ast":null,"code":"var _jsxFileName = \"/home/seymourpoler/Documents/code/GitHub/PetProjects/TuduManayer/java/TuduManager/web.react/src/todo/manage/ManageTodoView.js\";\nimport React from 'react';\nimport { Spinner } from '../../Spinner';\nimport { createManageTodoPresenter } from './ManageTodoPresenter';\nimport { ErrorMessages } from '../../ErrorMessages';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nexport class ManageTodoView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.presenter = createManageTodoPresenter(this);\n\n    this.btnEditTodo = (cell, row, enumObject, rowIndex) => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          console.log('row: ', row);\n          this.presenter.editTodo(row.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, \"edit\");\n    };\n\n    this.onSearchTextChangedHandler = event => {\n      this.setState({\n        searchText: event.target.value\n      });\n    };\n\n    this.onSearchClickedHandler = event => {\n      this.presenter.search(this.state.searchText);\n    };\n\n    this.onNewTodoClickedHandler = () => {\n      this.presenter.createNewTodo();\n    };\n\n    this.showSpinner = () => {\n      this.setState({\n        showSpinner: true\n      });\n    };\n\n    this.hideSpinner = () => {\n      this.setState({\n        showSpinner: false\n      });\n    };\n\n    this.cleanMessages = () => {\n      this.setState({\n        errorMessage: ''\n      });\n    };\n\n    this.showInternalServerError = () => {\n      this.setState({\n        errorMessage: ErrorMessages.InternalServerError\n      });\n    };\n\n    this.showTodos = todos => {\n      this.setState({\n        todos\n      });\n    };\n\n    this.redirectToCreateNewTodo = () => {\n      this.props.history.push(\"/create\");\n    };\n\n    this.redirectToEditTodo = todoId => {\n      this.props.history.push(\"/todos/\" + todoId);\n    };\n\n    this.state = {\n      showSpinner: false,\n      searchText: '',\n      todos: [],\n      errorMessage: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      show: this.state.showSpinner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onNewTodoClickedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, \" new \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.onSearchTextChangedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onSearchClickedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 84\n      }\n    }, \" search \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, this.state.errorMessage), /*#__PURE__*/React.createElement(BootstrapTable, {\n      data: this.state.todos,\n      striped: true,\n      hover: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      isKey: true,\n      dataField: \"id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 23\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      dataField: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      dataField: \"button\",\n      dataFormat: this.btnEditTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }\n    })));\n  }\n\n}\nexport function createManageTodoView() {\n  return new ManageTodoView();\n}","map":{"version":3,"sources":["/home/seymourpoler/Documents/code/GitHub/PetProjects/TuduManayer/java/TuduManager/web.react/src/todo/manage/ManageTodoView.js"],"names":["React","Spinner","createManageTodoPresenter","ErrorMessages","BootstrapTable","TableHeaderColumn","ManageTodoView","Component","constructor","props","presenter","btnEditTodo","cell","row","enumObject","rowIndex","console","log","editTodo","id","onSearchTextChangedHandler","event","setState","searchText","target","value","onSearchClickedHandler","search","state","onNewTodoClickedHandler","createNewTodo","showSpinner","hideSpinner","cleanMessages","errorMessage","showInternalServerError","InternalServerError","showTodos","todos","redirectToCreateNewTodo","history","push","redirectToEditTodo","todoId","render","createManageTodoView"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Spinner } from '../../Spinner';\nimport { createManageTodoPresenter } from './ManageTodoPresenter';\nimport { ErrorMessages } from '../../ErrorMessages';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\n\nexport class ManageTodoView extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            showSpinner: false,\n            searchText: '',\n            todos: [],\n            errorMessage: ''\n        }\n    }\n\n    presenter = createManageTodoPresenter(this);\n\n    btnEditTodo = (cell, row, enumObject, rowIndex) => {\n        return (\n        <button type=\"button\"\n            onClick={() => {\n                    console.log('row: ', row);\n                    this.presenter.editTodo(row.id);\n                }\n            }>\n            edit\n        </button>\n      )\n    }\n\n    render(){\n        return (\n                <div>\n                    <Spinner show={this.state.showSpinner}/>\n                    <button onClick={this.onNewTodoClickedHandler} > new </button>\n                    <input type='text' onChange={this.onSearchTextChangedHandler}/><button onClick={this.onSearchClickedHandler}> search </button>\n                    <p>{this.state.errorMessage}</p>\n                    <BootstrapTable data={this.state.todos} striped hover>\n                      <TableHeaderColumn isKey dataField='id'>ID</TableHeaderColumn>\n                      <TableHeaderColumn dataField='title'>Title</TableHeaderColumn>\n                      <TableHeaderColumn dataField='button' dataFormat={this.btnEditTodo}\n                                />\n                  </BootstrapTable>\n                </div>);\n    }\n\n    onSearchTextChangedHandler = (event) => {\n        this.setState({ searchText: event.target.value });\n    }\n\n    onSearchClickedHandler = (event) => {\n        this.presenter.search(this.state.searchText);\n    }\n\n    onNewTodoClickedHandler = () => {\n        this.presenter.createNewTodo();\n    }\n\n    showSpinner = () => {\n        this.setState({ showSpinner: true });\n    }\n\n    hideSpinner = () => {\n        this.setState({ showSpinner: false });\n    }\n\n    cleanMessages = () => {\n        this.setState({errorMessage: ''});\n    }\n\n\n    showInternalServerError = () => {\n        this.setState({ errorMessage: ErrorMessages.InternalServerError });\n    }\n\n    showTodos = (todos) => {\n        this.setState({ todos });\n    }\n\n    redirectToCreateNewTodo = () => {\n        this.props.history.push(\"/create\");\n    }\n\n    redirectToEditTodo = (todoId) => {\n        this.props.history.push(\"/todos/\" + todoId);\n    }\n}\n\nexport function createManageTodoView(){\n    return new ManageTodoView();\n}"]},"metadata":{},"sourceType":"module"}