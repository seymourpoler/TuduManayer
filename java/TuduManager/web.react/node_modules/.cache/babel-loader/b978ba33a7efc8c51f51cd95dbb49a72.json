{"ast":null,"code":"var _jsxFileName = \"/home/seymourpoler/Documents/code/GitHub/PetProjects/TuduManayer/java/TuduManager/web.react/src/todo/edit/EditTodoView.js\";\nimport React from 'react';\nimport { Spinner } from '../../Spinner';\nimport { createEditTodoPresenter } from \"./EditTodoPresenter\";\nexport class EditTodoView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.presenter = createEditTodoPresenter(this);\n\n    this.cleanMessages = () => {\n      this.setState({\n        titleErrorMessage: '',\n        errorMessage: '',\n        message: ''\n      });\n    };\n\n    this.showSpinner = () => {\n      this.setState({\n        showSpinner: true\n      });\n    };\n\n    this.hideSpinner = () => {\n      this.setState({\n        showSpinner: false\n      });\n    };\n\n    this.showInternalServerError = () => {\n      this.setState({\n        errorMessage: 'There is an internal server error.'\n      });\n    };\n\n    this.showErrors = errors => {\n      throw 'not implemented';\n    };\n\n    this.showUpdatedTodoMessage = () => {\n      this.setState({\n        message: 'TODO updated'\n      });\n    };\n\n    this.redirectToSearchPage = () => {\n      this.props.history.push('/manage');\n    };\n\n    this.onTitleChangedHandler = event => {\n      this.setState({\n        title: event.target.value\n      });\n    };\n\n    this.onDescriptionChangedHandler = event => {\n      this.setState({\n        description: event.target.value\n      });\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.onSaveClickedHandler = event => {\n      this.presenter.update({\n        id: this.state.id,\n        title: this.state.title,\n        description: this.state.description\n      });\n    };\n\n    this.onCancelClickedHandler = event => {\n      this.presenter.cancel();\n    };\n\n    this.state = {\n      showSpinner: false,\n      id: '',\n      title: '',\n      description: '',\n      titleErrorMessage: '',\n      errorMessage: '',\n      message: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      id: this.props.match.params.todoId\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      show: this.state.showSpinner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, \"Title: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      onChange: this.onTitleChangedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"titleErrorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, this.state.titleErrorMessage), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, \"Description: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      onChange: this.onDescriptionChangedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"save\",\n      onClick: this.onSaveClickedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"cancel\",\n      onClick: this.onCancelClickedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, this.state.errorMessage), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, this.state.message));\n  }\n\n}\nexport function createEditTodoView() {\n  return new EditTodoView();\n}","map":{"version":3,"sources":["/home/seymourpoler/Documents/code/GitHub/PetProjects/TuduManayer/java/TuduManager/web.react/src/todo/edit/EditTodoView.js"],"names":["React","Spinner","createEditTodoPresenter","EditTodoView","Component","constructor","props","presenter","cleanMessages","setState","titleErrorMessage","errorMessage","message","showSpinner","hideSpinner","showInternalServerError","showErrors","errors","showUpdatedTodoMessage","redirectToSearchPage","history","push","onTitleChangedHandler","event","title","target","value","onDescriptionChangedHandler","description","onSaveClickedHandler","update","id","state","onCancelClickedHandler","cancel","componentDidMount","match","params","todoId","render","createEditTodoView"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAAQC,uBAAR,QAAsC,qBAAtC;AAEA,OAAO,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAE9CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SAclBC,SAdkB,GAcNL,uBAAuB,CAAC,IAAD,CAdjB;;AAAA,SAiClBM,aAjCkB,GAiCF,MAAM;AAClB,WAAKC,QAAL,CAAc;AACVC,QAAAA,iBAAiB,EAAE,EADT;AAEVC,QAAAA,YAAY,EAAE,EAFJ;AAGVC,QAAAA,OAAO,EAAE;AAHC,OAAd;AAKH,KAvCiB;;AAAA,SAyClBC,WAzCkB,GAyCJ,MAAM;AAChB,WAAKJ,QAAL,CAAc;AAACI,QAAAA,WAAW,EAAE;AAAd,OAAd;AACH,KA3CiB;;AAAA,SA6ClBC,WA7CkB,GA6CJ,MAAM;AAChB,WAAKL,QAAL,CAAc;AAACI,QAAAA,WAAW,EAAE;AAAd,OAAd;AACH,KA/CiB;;AAAA,SAiDlBE,uBAjDkB,GAiDQ,MAAM;AAC5B,WAAKN,QAAL,CAAc;AAACE,QAAAA,YAAY,EAAE;AAAf,OAAd;AACH,KAnDiB;;AAAA,SAqDlBK,UArDkB,GAqDJC,MAAD,IAAY;AACrB,YAAM,iBAAN;AACH,KAvDiB;;AAAA,SAyDlBC,sBAzDkB,GAyDO,MAAM;AAC3B,WAAKT,QAAL,CAAc;AAACG,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KA3DiB;;AAAA,SA6DlBO,oBA7DkB,GA6DK,MAAM;AACzB,WAAKb,KAAL,CAAWc,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACH,KA/DiB;;AAAA,SAiElBC,qBAjEkB,GAiEOC,KAAD,IAAW;AAC/B,WAAKd,QAAL,CAAc;AAAEe,QAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaC;AAAtB,OAAd;AACH,KAnEiB;;AAAA,SAqElBC,2BArEkB,GAqEaJ,KAAD,IAAW;AACrC,WAAKd,QAAL,CAAc;AAAEmB,QAAAA,WAAW,EAAEL,KAAK,CAACE,MAAN,CAAaC;AAA5B,OAAd;AACA,WAAKjB,QAAL,CAAc;AAAEmB,QAAAA,WAAW,EAAEL,KAAK,CAACE,MAAN,CAAaC;AAA5B,OAAd;AACH,KAxEiB;;AAAA,SA0ElBG,oBA1EkB,GA0EMN,KAAD,IAAW;AAC9B,WAAKhB,SAAL,CAAeuB,MAAf,CAAsB;AAClBC,QAAAA,EAAE,EAAE,KAAKC,KAAL,CAAWD,EADG;AAElBP,QAAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWR,KAFA;AAGlBI,QAAAA,WAAW,EAAE,KAAKI,KAAL,CAAWJ;AAHN,OAAtB;AAKH,KAhFiB;;AAAA,SAkFlBK,sBAlFkB,GAkFQV,KAAD,IAAW;AAChC,WAAKhB,SAAL,CAAe2B,MAAf;AACH,KApFiB;;AAGd,SAAKF,KAAL,GAAa;AACTnB,MAAAA,WAAW,EAAE,KADJ;AAETkB,MAAAA,EAAE,EAAE,EAFK;AAGTP,MAAAA,KAAK,EAAE,EAHE;AAITI,MAAAA,WAAW,EAAE,EAJJ;AAKTlB,MAAAA,iBAAiB,EAAE,EALV;AAMTC,MAAAA,YAAY,EAAE,EANL;AAOTC,MAAAA,OAAO,EAAE;AAPA,KAAb;AASH;;AAIDuB,EAAAA,iBAAiB,GAAG;AAChB,SAAK1B,QAAL,CAAc;AAACsB,MAAAA,EAAE,EAAE,KAAKzB,KAAL,CAAW8B,KAAX,CAAiBC,MAAjB,CAAwBC;AAA7B,KAAd;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWnB,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAU;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,OAAtB;AAA8B,MAAA,QAAQ,EAAE,KAAKS,qBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV,CAFA,eAGA;AAAG,MAAA,EAAE,EAAC,mBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKU,KAAL,CAAWtB,iBAAtC,CAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAgB;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,aAAtB;AAAoC,MAAA,QAAQ,EAAE,KAAKiB,2BAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB,CAJA,eAKA;AAAQ,MAAA,EAAE,EAAC,MAAX;AAAkB,MAAA,OAAO,EAAE,KAAKE,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALA,eAMA;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAoB,MAAA,OAAO,EAAE,KAAKI,sBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANA,eAOA;AAAG,MAAA,EAAE,EAAC,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB,KAAKD,KAAL,CAAWrB,YAAjC,CAPA,eAQA;AAAG,MAAA,EAAE,EAAC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB,KAAKqB,KAAL,CAAWpB,OAA5B,CARA,CAAR;AAUH;;AAjC6C;AAyFlD,OAAO,SAAS4B,kBAAT,GAA6B;AAChC,SAAO,IAAIrC,YAAJ,EAAP;AACH","sourcesContent":["import React from 'react';\nimport { Spinner } from '../../Spinner';\nimport {createEditTodoPresenter} from \"./EditTodoPresenter\";\n\nexport class EditTodoView extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            showSpinner: false,\n            id: '',\n            title: '',\n            description: '',\n            titleErrorMessage: '',\n            errorMessage: '',\n            message: ''\n        }\n    }\n\n    presenter = createEditTodoPresenter(this);\n\n    componentDidMount() {\n        this.setState({id: this.props.match.params.todoId });\n    }\n\n    render(){\n        return (<div>\n                <Spinner show={this.state.showSpinner} />\n                <p>Title: <input type='text' id='title' onChange={this.onTitleChangedHandler} /></p>\n                <p id='titleErrorMessage'>{this.state.titleErrorMessage}</p>\n                <p>Description: <input type='text' id='description' onChange={this.onDescriptionChangedHandler} /></p>\n                <button id='save' onClick={this.onSaveClickedHandler}>Save</button>\n                <button id='cancel' onClick={this.onCancelClickedHandler}>Cancel</button>\n                <p id='errorMessage'>{this.state.errorMessage}</p>\n                <p id='message'>{this.state.message}</p>\n            </div>);\n    }\n\n    cleanMessages = () => {\n        this.setState({\n            titleErrorMessage: '',\n            errorMessage: '',\n            message: ''\n        });\n    }\n\n    showSpinner = () => {\n        this.setState({showSpinner: true});\n    }\n\n    hideSpinner = () => {\n        this.setState({showSpinner: false});\n    }\n\n    showInternalServerError = () => {\n        this.setState({errorMessage: 'There is an internal server error.'})\n    }\n\n    showErrors = (errors) => {\n        throw 'not implemented';\n    }\n\n    showUpdatedTodoMessage = () => {\n        this.setState({message: 'TODO updated'});\n    }\n\n    redirectToSearchPage = () => {\n        this.props.history.push('/manage');\n    }\n\n    onTitleChangedHandler = (event) => {\n        this.setState({ title: event.target.value });\n    }\n\n    onDescriptionChangedHandler = (event) => {\n        this.setState({ description: event.target.value });\n        this.setState({ description: event.target.value });\n    }\n\n    onSaveClickedHandler = (event) => {\n        this.presenter.update({\n            id: this.state.id,\n            title: this.state.title,\n            description: this.state.description\n        })\n    }\n\n    onCancelClickedHandler = (event) => {\n        this.presenter.cancel();\n    }\n}\n\nexport function createEditTodoView(){\n    return new EditTodoView();\n}"]},"metadata":{},"sourceType":"module"}