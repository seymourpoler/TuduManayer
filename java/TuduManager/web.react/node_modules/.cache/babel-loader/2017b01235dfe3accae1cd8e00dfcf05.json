{"ast":null,"code":"import { createSearchTodoService } from './SearchTodoService';\nimport { HttpStatusCode } from '../../HttpStatusCode';\nexport function ManageTodoPresenter(view, searchService) {\n  let self = this;\n\n  self.search = async textSearch => {\n    view.cleanMessages();\n    view.showSpinner();\n    const result = await searchService.search(textSearch);\n    view.hideSpinner();\n\n    if (result.statusCode === HttpStatusCode.internalServerError) {\n      view.showInternalServerError();\n      return;\n    }\n\n    view.showTodos(result.todos);\n  };\n\n  self.createNewTodo = () => {\n    view.redirectToCreateNewTodo();\n  };\n\n  self.editTodo = todoId => {\n    view.redirectToEditTodo(todoId);\n  };\n}\nexport function createManageTodoPresenter(view) {\n  const service = createSearchTodoService();\n  return new ManageTodoPresenter(view, service);\n}","map":{"version":3,"sources":["/home/seymourpoler/Documents/code/GitHub/PetProjects/TuduManayer/java/TuduManager/web.react/src/todo/manage/ManageTodoPresenter.js"],"names":["createSearchTodoService","HttpStatusCode","ManageTodoPresenter","view","searchService","self","search","textSearch","cleanMessages","showSpinner","result","hideSpinner","statusCode","internalServerError","showInternalServerError","showTodos","todos","createNewTodo","redirectToCreateNewTodo","editTodo","todoId","redirectToEditTodo","createManageTodoPresenter","service"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,qBAAxC;AACA,SAASC,cAAT,QAA+B,sBAA/B;AAEA,OAAO,SAASC,mBAAT,CAA6BC,IAA7B,EAAmCC,aAAnC,EAAkD;AACrD,MAAIC,IAAI,GAAG,IAAX;;AAEAA,EAAAA,IAAI,CAACC,MAAL,GAAc,MAAOC,UAAP,IAAsB;AAChCJ,IAAAA,IAAI,CAACK,aAAL;AACAL,IAAAA,IAAI,CAACM,WAAL;AACA,UAAMC,MAAM,GAAG,MAAMN,aAAa,CAACE,MAAd,CAAqBC,UAArB,CAArB;AACAJ,IAAAA,IAAI,CAACQ,WAAL;;AAEA,QAAGD,MAAM,CAACE,UAAP,KAAsBX,cAAc,CAACY,mBAAxC,EAA4D;AACxDV,MAAAA,IAAI,CAACW,uBAAL;AACA;AACH;;AACDX,IAAAA,IAAI,CAACY,SAAL,CAAeL,MAAM,CAACM,KAAtB;AACH,GAXD;;AAaAX,EAAAA,IAAI,CAACY,aAAL,GAAqB,MAAM;AACvBd,IAAAA,IAAI,CAACe,uBAAL;AACH,GAFD;;AAIAb,EAAAA,IAAI,CAACc,QAAL,GAAiBC,MAAD,IAAY;AACxBjB,IAAAA,IAAI,CAACkB,kBAAL,CAAwBD,MAAxB;AACH,GAFD;AAGH;AAED,OAAO,SAASE,yBAAT,CAAmCnB,IAAnC,EAAyC;AAC5C,QAAMoB,OAAO,GAAGvB,uBAAuB,EAAvC;AACA,SAAO,IAAIE,mBAAJ,CAAwBC,IAAxB,EAA8BoB,OAA9B,CAAP;AACH","sourcesContent":["import { createSearchTodoService } from './SearchTodoService';\nimport { HttpStatusCode } from '../../HttpStatusCode';\n\nexport function ManageTodoPresenter(view, searchService) {\n    let self = this;\n\n    self.search = async (textSearch) => {\n        view.cleanMessages();\n        view.showSpinner();\n        const result = await searchService.search(textSearch);\n        view.hideSpinner();\n\n        if(result.statusCode === HttpStatusCode.internalServerError){\n            view.showInternalServerError();\n            return;\n        }\n        view.showTodos(result.todos);\n    }\n\n    self.createNewTodo = () => {\n        view.redirectToCreateNewTodo();\n    }\n\n    self.editTodo = (todoId) => {\n        view.redirectToEditTodo(todoId);\n    }\n}\n\nexport function createManageTodoPresenter(view) {\n    const service = createSearchTodoService();\n    return new ManageTodoPresenter(view, service);\n}"]},"metadata":{},"sourceType":"module"}