{"ast":null,"code":"import { createHttp } from '../../Http';\nimport { HttpStatusCode } from '../../HttpStatusCode';\nexport function CreateTodoService(http) {\n  let self = this;\n\n  self.save = async todo => {\n    const url = 'api/todos';\n    const response = await http.post(url, todo);\n\n    if (response.statusCode === HttpStatusCode.internalServerError) {\n      return {\n        statusCode: HttpStatusCode.internalServerError\n      };\n    }\n\n    if (response.statusCode === HttpStatusCode.badRequest) {\n      return {\n        statusCode: HttpStatusCode.badRequest,\n        errors: response.body\n      };\n    }\n\n    return {\n      statusCode: HttpStatusCode.ok\n    };\n  };\n}\nexport function createCreateTodoService() {\n  const http = createHttp();\n  return new CreateTodoService(http);\n}","map":{"version":3,"sources":["/home/seymourpoler/Documents/code/GitHub/PetProjects/TuduManayer/java/TuduManager/web.react/src/todo/create/CreateTodoService.js"],"names":["createHttp","HttpStatusCode","CreateTodoService","http","self","save","todo","url","response","post","statusCode","internalServerError","badRequest","errors","body","ok","createCreateTodoService"],"mappings":"AAAA,SAASA,UAAT,QAA2B,YAA3B;AACA,SAASC,cAAT,QAA+B,sBAA/B;AAEA,OAAO,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AACpC,MAAIC,IAAI,GAAG,IAAX;;AAEAA,EAAAA,IAAI,CAACC,IAAL,GAAY,MAAOC,IAAP,IAAgB;AACxB,UAAMC,GAAG,GAAG,WAAZ;AACA,UAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,IAAL,CAAUF,GAAV,EAAeD,IAAf,CAAvB;;AACA,QAAGE,QAAQ,CAACE,UAAT,KAAwBT,cAAc,CAACU,mBAA1C,EAA+D;AAC3D,aAAO;AAAED,QAAAA,UAAU,EAAET,cAAc,CAACU;AAA7B,OAAP;AACH;;AACD,QAAGH,QAAQ,CAACE,UAAT,KAAwBT,cAAc,CAACW,UAA1C,EAAsD;AAClD,aAAO;AACHF,QAAAA,UAAU,EAAET,cAAc,CAACW,UADxB;AAEHC,QAAAA,MAAM,EAAEL,QAAQ,CAACM;AAFd,OAAP;AAIH;;AACD,WAAO;AACHJ,MAAAA,UAAU,EAAET,cAAc,CAACc;AADxB,KAAP;AAGH,GAfD;AAgBH;AAED,OAAO,SAASC,uBAAT,GAAmC;AACtC,QAAMb,IAAI,GAAGH,UAAU,EAAvB;AACA,SAAO,IAAIE,iBAAJ,CAAsBC,IAAtB,CAAP;AACH","sourcesContent":["import { createHttp } from '../../Http';\nimport { HttpStatusCode } from '../../HttpStatusCode';\n\nexport function CreateTodoService(http) {\n    let self = this;\n\n    self.save = async (todo) => {\n        const url = 'api/todos';\n        const response = await http.post(url, todo);\n        if(response.statusCode === HttpStatusCode.internalServerError) {\n            return { statusCode: HttpStatusCode.internalServerError };\n        }\n        if(response.statusCode === HttpStatusCode.badRequest) {\n            return {\n                statusCode: HttpStatusCode.badRequest,\n                errors: response.body\n            }\n        }\n        return {\n            statusCode: HttpStatusCode.ok\n        }\n    };\n}\n\nexport function createCreateTodoService() {\n    const http = createHttp();\n    return new CreateTodoService(http);\n}\n"]},"metadata":{},"sourceType":"module"}