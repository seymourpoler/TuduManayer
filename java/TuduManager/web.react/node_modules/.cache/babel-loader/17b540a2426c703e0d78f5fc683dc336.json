{"ast":null,"code":"import { createCreateTodoService } from './CreateTodoService';\nimport { HttpStatusCode } from '../../HttpStatusCode';\nexport function CreateTodoPresenter(view, service) {\n  let self = this;\n\n  self.save = async todo => {\n    view.cleanMessages();\n    view.showSpinner();\n    const result = await service.save(todo);\n    view.hideSpinner();\n\n    if (result.statusCode === HttpStatusCode.internalServerError) {\n      view.showInternalServerError();\n      return;\n    }\n\n    if (result.statusCode === HttpStatusCode.badRequest) {\n      view.showErrors(result.errors);\n      return;\n    }\n\n    view.showTodoCreated();\n  };\n\n  self.cancel = () => {\n    view.cleanMessages();\n    view.redirectToPageBefore();\n  };\n}\nexport function createCreateTodoPresenter(view) {\n  const service = createCreateTodoService();\n  return new CreateTodoPresenter(view, service);\n}","map":{"version":3,"sources":["/home/seymourpoler/Documents/code/GitHub/PetProjects/TuduManayer/java/TuduManager/web.react/src/todo/create/CreateTodoPresenter.js"],"names":["createCreateTodoService","HttpStatusCode","CreateTodoPresenter","view","service","self","save","todo","cleanMessages","showSpinner","result","hideSpinner","statusCode","internalServerError","showInternalServerError","badRequest","showErrors","errors","showTodoCreated","cancel","redirectToPageBefore","createCreateTodoPresenter"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,qBAAxC;AACA,SAASC,cAAT,QAA+B,sBAA/B;AAEA,OAAO,SAASC,mBAAT,CAA6BC,IAA7B,EAAmCC,OAAnC,EAA2C;AAC9C,MAAIC,IAAI,GAAG,IAAX;;AAEAA,EAAAA,IAAI,CAACC,IAAL,GAAY,MAAOC,IAAP,IAAgB;AACxBJ,IAAAA,IAAI,CAACK,aAAL;AACAL,IAAAA,IAAI,CAACM,WAAL;AACA,UAAMC,MAAM,GAAG,MAAMN,OAAO,CAACE,IAAR,CAAaC,IAAb,CAArB;AACAJ,IAAAA,IAAI,CAACQ,WAAL;;AACA,QAAGD,MAAM,CAACE,UAAP,KAAsBX,cAAc,CAACY,mBAAxC,EAA4D;AACxDV,MAAAA,IAAI,CAACW,uBAAL;AACA;AACH;;AACD,QAAGJ,MAAM,CAACE,UAAP,KAAsBX,cAAc,CAACc,UAAxC,EAAmD;AAC/CZ,MAAAA,IAAI,CAACa,UAAL,CAAgBN,MAAM,CAACO,MAAvB;AACA;AACH;;AACDd,IAAAA,IAAI,CAACe,eAAL;AACH,GAdD;;AAgBAb,EAAAA,IAAI,CAACc,MAAL,GAAc,MAAM;AAChBhB,IAAAA,IAAI,CAACK,aAAL;AACAL,IAAAA,IAAI,CAACiB,oBAAL;AACH,GAHD;AAIH;AAED,OAAO,SAASC,yBAAT,CAAmClB,IAAnC,EAAwC;AAC3C,QAAMC,OAAO,GAAGJ,uBAAuB,EAAvC;AACA,SAAO,IAAIE,mBAAJ,CAAwBC,IAAxB,EAA8BC,OAA9B,CAAP;AACH","sourcesContent":["import { createCreateTodoService } from './CreateTodoService';\nimport { HttpStatusCode } from '../../HttpStatusCode';\n\nexport function CreateTodoPresenter(view, service){\n    let self = this;\n\n    self.save = async (todo) => {\n        view.cleanMessages();\n        view.showSpinner();\n        const result = await service.save(todo);\n        view.hideSpinner();\n        if(result.statusCode === HttpStatusCode.internalServerError){\n            view.showInternalServerError();\n            return;\n        }\n        if(result.statusCode === HttpStatusCode.badRequest){\n            view.showErrors(result.errors);\n            return;\n        }\n        view.showTodoCreated();\n    };\n\n    self.cancel = () => {\n        view.cleanMessages();\n        view.redirectToPageBefore();\n    }\n}\n\nexport function createCreateTodoPresenter(view){\n    const service = createCreateTodoService();\n    return new CreateTodoPresenter(view, service);\n}\n"]},"metadata":{},"sourceType":"module"}