{"ast":null,"code":"import { HttpStatusCode } from \"../../HttpStatusCode\";\nimport { createHttp } from \"../../Http\";\nexport function EditTodoService(http) {\n  let self = this;\n\n  self.update = async function (todo) {\n    const url = '/api/todos';\n    const response = await http.put(url, JSON.stringify(todo));\n\n    if (response.statusCode === HttpStatusCode.badRequest) {\n      return {\n        statusCode: response.statusCode,\n        errors: response.body\n      };\n    }\n\n    return {\n      statusCode: response.statusCode\n    };\n  };\n}\nexport function createEditTodoService() {\n  const http = createHttp();\n  return new EditTodoService(http);\n}","map":{"version":3,"sources":["/home/seymourpoler/Documents/code/GitHub/PetProjects/TuduManayer/java/TuduManager/web.react/src/todo/edit/EditTodoService.js"],"names":["HttpStatusCode","createHttp","EditTodoService","http","self","update","todo","url","response","put","JSON","stringify","statusCode","badRequest","errors","body","createEditTodoService"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,sBAA7B;AACA,SAAQC,UAAR,QAAyB,YAAzB;AAEA,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA8B;AACjC,MAAIC,IAAI,GAAG,IAAX;;AAEAA,EAAAA,IAAI,CAACC,MAAL,GAAc,gBAAeC,IAAf,EAAqB;AAC/B,UAAMC,GAAG,GAAG,YAAZ;AACA,UAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CAASF,GAAT,EAAcG,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAd,CAAvB;;AACA,QAAGE,QAAQ,CAACI,UAAT,KAAwBZ,cAAc,CAACa,UAA1C,EAAqD;AACjD,aAAO;AACHD,QAAAA,UAAU,EAAEJ,QAAQ,CAACI,UADlB;AAEHE,QAAAA,MAAM,EAAEN,QAAQ,CAACO;AAFd,OAAP;AAIH;;AAED,WAAO;AACHH,MAAAA,UAAU,EAAEJ,QAAQ,CAACI;AADlB,KAAP;AAGH,GAbD;AAcH;AAED,OAAO,SAASI,qBAAT,GAAiC;AACpC,QAAMb,IAAI,GAAGF,UAAU,EAAvB;AACA,SAAO,IAAIC,eAAJ,CAAoBC,IAApB,CAAP;AACH","sourcesContent":["import {HttpStatusCode} from \"../../HttpStatusCode\";\nimport {createHttp} from \"../../Http\";\n\nexport function EditTodoService(http){\n    let self = this;\n\n    self.update = async function(todo) {\n        const url = '/api/todos';\n        const response = await http.put(url, JSON.stringify(todo));\n        if(response.statusCode === HttpStatusCode.badRequest){\n            return {\n                statusCode: response.statusCode,\n                errors: response.body\n            }\n        }\n\n        return {\n            statusCode: response.statusCode\n        }\n    }\n}\n\nexport function createEditTodoService() {\n    const http = createHttp();\n    return new EditTodoService(http);\n}"]},"metadata":{},"sourceType":"module"}